
Equal : @(t:*) @(a:t) @(b:t) * = #t #a #b @(p:@(b:t) *) @(r:(p a)) (p b);
same : @(t:*) @(a:t) (((Equal t) a) a) = #t #a #p #r r;
CNat : * = @(p:*) @(s:@(n:p) p) @(z:p) p;
zero : CNat = #p #s #z z;
succ : @(n:CNat) CNat = #n #p #s #z (s (((n p) s) z));
n0 : CNat = zero;
n1 : CNat = (succ n0);
n2 : CNat = (succ n1);
n3 : CNat = (succ n2);
n4 : CNat = (succ n3);
n5 : CNat = (succ n4);
n6 : CNat = (succ n5);
n7 : CNat = (succ n6);
n8 : CNat = (succ n7);
n9 : CNat = (succ n8);
n10 : CNat = (succ n9);
n11 : CNat = (succ n10);
n12 : CNat = (succ n11);
n13 : CNat = (succ n12);
n14 : CNat = (succ n13);
n15 : CNat = (succ n14);
n16 : CNat = (succ n15);
n17 : CNat = (succ n16);
n18 : CNat = (succ n17);
n19 : CNat = (succ n18);
n20 : CNat = (succ n19);
n21 : CNat = (succ n20);
n22 : CNat = (succ n21);
n23 : CNat = (succ n22);
n24 : CNat = (succ n23);
CBool : * = @(p:*) @(t:p) @(f:p) p;
tru : CBool = #p #t #f t;
fal : CBool = #p #t #f f;
not : @(b:CBool) CBool = #b #p #t #f (((b p) f) t);
xor : @(a:CBool) @(b:CBool) CBool = #a #b ((((a @(b:CBool) CBool) #b (((b CBool) fal) tru)) #b (((b CBool) tru) fal)) b);
slow : @(n:CNat) CBool = #n (((n CBool) #r ((xor r) r)) fal);
main : (((Equal CBool) (slow n24)) fal) = ((same CBool) fal);
